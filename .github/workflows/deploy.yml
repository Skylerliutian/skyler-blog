name: Deploy Skyler's Blog

on:
  push:
    branches:
      - master # 只在master上push触发部署
    paths-ignore: # 下列文件的变更不触发部署，可以自行添加
      - README.md
      - LICENSE

jobs:
  deploy:
    runs-on: ubuntu-latest # 使用ubuntu系统镜像运行自动化脚本

    steps: # 自动化步骤
      - uses: actions/checkout@v2 # 第一步，下载代码仓库

      # - name: Set up node Env
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: "16"
      #     cache: "yarn"
      # - name: build website
      #   run: |
      #     yarn install
      #     yarn build
      - name: 123
        run: |
          chmod 777 ./blog
          ls -l

      - name: Deploy to Server # 第二步，rsync推文件
        uses: AEnterprise/rsync-deploy@v1.0 # 使用别人包装好的步骤镜像
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }} # 引用配置，SSH私钥
          ARGS: -avz --delete --exclude='*.pyc' # rsync参数，排除.pyc文件
          SERVER_PORT: 22 # SSH端口
          FOLDER: ./blog/ # 要推送的文件夹，路径相对于代码仓库的根目录
          SERVER_IP: ${{ secrets.SSH_HOST }} # 引用配置，服务器的host名（IP或者域名domain.com）
          USERNAME: ${{ secrets.SSH_USERNAME }} # 引用配置，服务器登录名
          SERVER_DESTINATION: /root/skyler-blog-website # 部署到目标文件夹
      # - name: Deploy
      #   uses: easingthemes/ssh-deploy@main
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_KEY }}
      #     ARGS: "-rltgoDzvO"
      #     SOURCE: "blog/"
      #     REMOTE_HOST: ${{ secrets.SSH_HOST }}
      #     REMOTE_USER: ${{ secrets.SSH_USERNAME }}
      #     TARGET: /root/skyler-blog-website
      #     EXCLUDE: "/dist/, /node_modules/"

      # 将打包好的产物
      # - name: Restart server # 第三步，重启服务
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.SSH_HOST }} # 下面三个配置与上一步类似
      #     username: ${{ secrets.SSH_USERNAME }}
      #     key: ${{ secrets.DEPLOY_KEY }}
      #     # 重启的脚本，根据自身情况做相应改动，一般要做的是migrate数据库以及重启服务器
      #     script: |
      #       cd /home/fming/mysite/
      #       python manage.py migrate
      #       supervisorctl restart web
